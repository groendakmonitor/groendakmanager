{"version":3,"sources":["authentication.ts","components/pages/Login/styles/groendak.jpg","components/pages/Login/Login.tsx","components/misc/Header.tsx","components/misc/Page.tsx","components/misc/Loading.tsx","components/pages/Overview/CustomerDetails/CustomerDetails.tsx","components/pages/Overview/CustomerList/CustomerRow.tsx","components/pages/Overview/CustomerList/CustomerList.tsx","components/pages/Overview/Overview.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["getAuthToken","localStorage","getItem","getAuthHeader","Login","useLocation","setLocation","useState","password","setPassword","className","src","img","type","onChange","e","currentTarget","value","onClick","fetch","process","method","headers","body","JSON","stringify","then","response","status","console","warn","text","token","setItem","Header","props","title","children","Page","Loading","role","aria-hidden","CustomerDetails","data","onUpdateCustomer","current","setCurrent","useEffect","handleChange","event","name","ref","useRef","searchRef","map","center","location","toLatLong","lat","lng","google","maps","Map","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","streetViewControl","fullscreenControl","zoom","marker","Marker","position","getCenter","addListener","c","setPosition","input","searchBox","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","setBounds","getBounds","getPlaces","length","bounds","LatLngBounds","forEach","place","geometry","viewport","union","extend","log","fitBounds","id","placeholder","min","roof_size","roof_thickness","style","width","height","split","i","Number","CustomerRow","selected","CustomerList","selectedCustomer","onCustomerSelect","scope","Overview","setData","setSelectedCustomer","loading","setLoading","json","prompt","customerData","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0640fbfe.chunk.js","sourcesContent":["export const getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n}\n\nexport const setAuthToken = (token: string) => {\n  localStorage.setItem(\"token\", token);\n}\n\n// Convenience function, returns header to pass to `fetch` api\nexport const getAuthHeader = () => {\n  return ['x-auth-token', getAuthToken()!]\n}","export default __webpack_public_path__ + \"static/media/groendak.8ad2a181.jpg\";","// import { API_URL } from \"api\";\nimport { setAuthToken } from \"authentication\";\nimport { useState } from \"react\";\nimport useLocation from \"wouter/use-location\";\nimport img from './styles/groendak.jpg';\n\nconst Login = () => {\n\n  const [_location, setLocation] = useLocation();\n  const [password, setPassword] = useState<string>(\"safehouse ominous overdrive\")\n\n  const handleLogin = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: 'post',\n      headers: [['Content-Type', 'application/json']],\n      body: JSON.stringify({\n        password\n      })\n    }).then((response) => {\n      if(response.status === 401) {\n        console.warn(\"WRONG PW\")\n      } else {\n        response.text().then((response) => {\n          setAuthToken(response);\n          setLocation(\"/\");\n\n        });\n      }\n    })\n  }\n\n  return (\n    <div className=\"container d-flex justify-content-center align-items-center vh-100\">\n      <div className=\"col col-md-4 user-form py-4 d-flex flex-column\">\n        <div className=\"card\">\n          <img src={img} className=\"card-img-top\" />\n          <div className=\"card-body\">\n            <h3 className=\"text-center\">Log in to groendakmonitor</h3>\n            <form>\n              <div className=\"mt-5\">\n                <div className=\"form-group\">\n                  <label className=\"form-label text-start w-100\">\n                    Password\n                    <input type=\"password\" className=\"form-control mt-2\" onChange={(e) => {setPassword(e.currentTarget.value)}} value={password} />              \n                  </label>\n                </div>\n              </div>\n            </form>\n            <div className=\"form-group\">\n              <button className=\"w-100 btn btn-success\" onClick={handleLogin} >\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default Login;","import { PropsWithChildren } from \"react\";\n\ninterface Props {\n  title: string\n}\n\nconst Header = (props: PropsWithChildren<Props>) => {\n  const { title, children } = props;\n  return (\n    <div className=\"page-header page-header-light\">\n      <div className=\"page-header-content container header-elements-inline\">\n        <div className=\"page-title d-flex\">\n          <h2 className=\"font-weight-semibold ml-2\">{title}</h2>\n        </div>\n        <div className=\"header-elements\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Header;\n","import { PropsWithChildren } from \"react\";\n\nconst Page = (props: PropsWithChildren<{}>) => {\n  const { children } = props\n  return (\n    <div className=\"page-content\">\n      <div className=\"content-wrapper\">\n        {children}\n      </div> \n    </div> \n  )\n}\nexport default Page;\n","const Loading = () => {\n  return (\n    <div className=\"d-flex align-items-center m-3\">\n      <strong>Loading...</strong>\n      <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\n    </div>\n  )\n}\nexport default Loading;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Customer } from \"models/customer\";\n\ninterface Props {\n  data: Customer;\n\n  onUpdateCustomer: (data: Customer) => void;\n}\n\nconst CustomerDetails = (props: Props) => {\n  const { data, onUpdateCustomer } = props;\n  const [current, setCurrent] = useState(data);\n\n  useEffect(() => {\n    setCurrent(data)\n  }, [data]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrent({\n      ...current,\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n  const handleSaveClick = () => {\n    onUpdateCustomer(current);\n  }\n\n  const ref = useRef<HTMLDivElement>(null)\n  const searchRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    let map: google.maps.Map;\n    const center: google.maps.LatLngLiteral = ! data.location ? {lat: 51.99954706308361, lng: 4.363697780523488} : toLatLong(data.location)\n    // 52.00621214372703,4.3545035426335765\n\n    map = new google.maps.Map(ref.current!, {\n      center,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      mapTypeControl: false,\n      streetViewControl: false,\n      fullscreenControl: false,\n      zoom: 11\n    });\n\n    const marker = new google.maps.Marker({\n      map,\n      // icon,\n      title: \"LOCATION\",\n      position: map.getCenter(),\n    })\n\n    map.addListener(\"center_changed\", () => {\n      setCurrent(c => ({\n        ...c,\n        location: `${map.getCenter().lat()},${map.getCenter().lng()}`\n      }))\n   \n  \n      marker.setPosition(map.getCenter())\n    });\n      \n\n    // Create the search box and link it to the UI element.\n  const input = searchRef.current!;\n  const searchBox = new google.maps.places.SearchBox(input);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n  // Bias the SearchBox results towards current map's viewport.\n  map.addListener(\"bounds_changed\", () => {\n    searchBox.setBounds(map.getBounds() as google.maps.LatLngBounds);\n  });\n\n  // [START maps_places_searchbox_getplaces]\n  // Listen for the event fired when the user selects a prediction and retrieve\n  // more details for that place.\n  searchBox.addListener(\"places_changed\", () => {\n    const places = searchBox.getPlaces();\n\n    if (places.length === 0) {\n      return;\n    }\n\n  \n    // For each place, get the icon, name and location.\n    const bounds = new google.maps.LatLngBounds();\n    places.forEach((place) => {\n      if (!place.geometry) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    map.fitBounds(bounds);\n  });\n\n  }, [data.location]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <fieldset>\n           <legend className=\"text-uppercase font-size-sm font-weight-bold d-flex justify-content-between\">\n            <span className=\"d-block\">Customer details</span>\n            <span className=\"d-block badge badge-info\">ID: {data.id}</span>\n          </legend>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Name</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control\" value={current.name} onChange={handleChange} name=\"name\" placeholder=\"name\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Roof size</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"number\" min=\"0\" className=\"form-control\" value={current.roof_size} onChange={handleChange} name=\"roof_size\" placeholder=\"roof size\" />\n                <span className=\"input-group-append\">\n                  <span className=\"input-group-text\">m2</span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Roof thickness</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"number\" min=\"0\" className=\"form-control\" value={current.roof_thickness} onChange={handleChange} name=\"roof_thickness\" placeholder=\"roof thickness\" />\n                <span className=\"input-group-append\">\n                  <span className=\"input-group-text\">cm</span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Location</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control\" ref={searchRef}/>\n                <div ref={ref} style={{ width: '100%', height: 200 }} />\n              </div>\n            </div>\n          </div>\n        </fieldset> \n      </div>\n      <div className=\"card-footer d-flex justify-content-between\">\n        <button type=\"submit\" className=\"btn btn-light\">Delete</button>\n        <div>\n          <button type=\"button\" className=\"ml-2 btn btn-primary\" onClick={handleSaveClick}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CustomerDetails;\n\nconst toLatLong = (input: string): google.maps.LatLngLiteral => {\n  const [lat, lng] = input.split(\",\").map(i => Number(i));\n  return { lat, lng }\n}","import { Customer } from \"models/customer\";\n\ninterface Props {\n  data: Customer;\n  selected?: boolean;\n\n  onClick: (customer: Customer) => void\n}\n\nconst CustomerRow = (props: Props) => {\n  const { data, selected, onClick } = props;\n  return (\n    <tr onClick={() => onClick(data)} className={selected ? \"selected\" : \"\"}>\n      <td>\n        <span className=\"d-block badge badge-info\">ID: {data.id}</span>\n      </td>\n      <td>{data.name}</td>\n    </tr>\n  )\n}\nexport default CustomerRow;\n\n","import { Customer } from \"models/customer\";\nimport React from \"react\";\nimport CustomerRow from \"./CustomerRow\";\nimport './styles/customerList.scss';\n\ninterface Props {\n  data: Customer[];\n  selectedCustomer?: Customer;\n\n  onCustomerSelect: (customer: Customer) => void\n}\n\nconst CustomerList = (props: Props) => {\n  const { data, selectedCustomer, onCustomerSelect } = props;\n  return (\n    <table className=\"table table-striped table-hover customer-list\">\n      <thead>\n        <tr>\n          <th scope=\"col\" style={{width: 32}}>#</th>\n          <th scope=\"col\">Name</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((c) => \n          <CustomerRow key={c.id} data={c} onClick={onCustomerSelect} selected={selectedCustomer === c}/>\n        )}\n      </tbody>  \n    </table>\n  )\n}\nexport default CustomerList;\n\n","import { getAuthHeader, getAuthToken } from \"authentication\";\nimport Header from \"components/misc/Header\";\nimport Page from \"components/misc/Page\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocation from \"wouter/use-location\";\nimport { Customer } from \"../../../models/customer\";\nimport Loading from \"../../misc/Loading\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport CustomerList from \"./CustomerList\";\n\nconst Overview = () => {\n  const [_location, setLocation] = useLocation();\n  const [data, setData] = useState<Customer[]>()\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer>()\n  const [loading, setLoading] = useState(false);\n  \n  useEffect(() => {\n    const token = getAuthToken();\n    if (!token) {\n      setLocation(\"/login\");\n      return;\n    }\n    setLoading(true)\n    fetch(`${process.env.REACT_APP_API_URL}/customers`, {\n      method: 'get',\n      headers: [['Content-Type', 'application/json'], getAuthHeader()],\n    })\n    .then<Customer[]>((response) => response.json())\n    .then((response) => {\n      setData(response);\n      setLoading(false)\n    })\n  }, [setLocation]);\n\n  const handleAddCustomer = () => {\n    const name = prompt(\"Enter customer name\");\n    if (name) {\n      setLoading(true)\n      fetch(`${process.env.REACT_APP_API_URL}/customer`, {\n        method: 'post',\n        headers: [['Content-Type', 'application/json'], getAuthHeader()],\n        body: JSON.stringify({\n          name\n        })\n      }).then<Customer[]>((response) => response.json())\n      .then((response) => {\n        setData(response);\n        setLoading(false);\n      })\n    }\n  }\n\n  const handleUpdateCustomer = (customerData: Customer) => {\n    console.log(customerData)\n    setLoading(true);\n    // Update customer on backend\n    fetch(`${process.env.REACT_APP_API_URL}/customer`, {\n      method: 'put',\n      headers: [['Content-Type', 'application/json'], getAuthHeader()],\n      body: JSON.stringify(customerData)\n    }).then<Customer[]>((response) => response.json())\n    .then((response) => {\n      console.log('done', response)\n      setData(response);\n      setLoading(false);\n    })\n  }\n\n  return (\n    <Page>\n      <Header title=\"Customers\">\n        <button type=\"button\" className=\"btn btn-success\" onClick={handleAddCustomer}>Add customer</button>\n      </Header>\n      <div className=\"container mt-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"card\">\n              <div className=\"card-header d-flex justify-content-between\">\n                <h3>Customers</h3>              \n              </div>\n              <div className=\"card-body p-0\">\n              { loading && <Loading />}\n              { data && <CustomerList data={data} onCustomerSelect={setSelectedCustomer} selectedCustomer={selectedCustomer} /> }\n              </div>\n            </div>\n          </div>\n          <div className=\"col\">\n            { selectedCustomer && <CustomerDetails data={selectedCustomer} onUpdateCustomer={handleUpdateCustomer} /> }\n          </div>\n        </div>\n      </div>\n    </Page>\n  )\n}\n\nexport default Overview;","import Login from 'components/pages/Login/Login';\nimport Overview from 'components/pages/Overview';\nimport React from 'react';\nimport { Route, Switch } from 'wouter';\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route>\n          <Overview />\n        </Route> \n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'assets/scss/bootstrap.scss';\nimport 'assets/scss/bootstrap_limitless.scss';\n\nimport 'assets/scss/colors.scss';\nimport 'assets/scss/components.scss';\nimport 'assets/scss/layout.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}