{"version":3,"sources":["authentication.ts","components/pages/Login/styles/groendak.jpg","components/pages/Login/Login.tsx","components/misc/Header.tsx","components/misc/Page.tsx","components/misc/Loading.tsx","components/pages/Overview/CustomerDetails/CustomerDetails.tsx","components/pages/Overview/CustomerList/CustomerRow.tsx","components/pages/Overview/CustomerList/CustomerList.tsx","components/pages/Overview/WaterList/WaterRow.tsx","components/pages/Overview/WaterList/WaterList.tsx","components/pages/Overview/Overview.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["getAuthToken","localStorage","getItem","getAuthHeader","Login","useLocation","setLocation","useState","password","setPassword","className","src","img","type","onChange","e","currentTarget","value","onClick","fetch","process","method","headers","body","JSON","stringify","then","response","status","console","warn","text","token","setItem","Header","props","title","children","Page","Loading","role","aria-hidden","CustomerDetails","data","onUpdateCustomer","onDeleteCustomer","current","setCurrent","useEffect","handleChange","event","name","ref","useRef","searchRef","map","center","location","toLatLong","lat","lng","google","maps","Map","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","streetViewControl","fullscreenControl","zoom","marker","Marker","position","getCenter","addListener","c","setPosition","input","searchBox","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","setBounds","getBounds","getPlaces","length","bounds","LatLngBounds","forEach","place","geometry","viewport","union","extend","log","fitBounds","id","placeholder","min","roof_size","roof_thickness","style","width","height","split","i","Number","CustomerRow","selected","date","last_water","Date","toLocaleString","CustomerList","selectedCustomer","onCustomerSelect","scope","WaterRow","incoming","outgoing","onAddWater","addingWater","setAddingWater","aW","target","Math","random","icon","faRandom","Overview","setData","setSelectedCustomer","loading","setLoading","selectedCustomerWater","setSelectedCustomerWater","json","prompt","customerData","confirm","WaterList","in","out","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9455588f.chunk.js","sourcesContent":["export const getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n}\n\nexport const setAuthToken = (token: string) => {\n  localStorage.setItem(\"token\", token);\n}\n\n// Convenience function, returns header to pass to `fetch` api\nexport const getAuthHeader = () => {\n  return ['x-auth-token', getAuthToken()!]\n}","export default __webpack_public_path__ + \"static/media/groendak.8ad2a181.jpg\";","// import { API_URL } from \"api\";\nimport { setAuthToken } from \"authentication\";\nimport { useState } from \"react\";\nimport useLocation from \"wouter/use-location\";\nimport img from './styles/groendak.jpg';\n\nconst Login = () => {\n\n  const [_location, setLocation] = useLocation();\n  const [password, setPassword] = useState<string>(\"safehouse ominous overdrive\")\n\n  const handleLogin = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: 'post',\n      headers: [['Content-Type', 'application/json']],\n      body: JSON.stringify({\n        password\n      })\n    }).then((response) => {\n      if(response.status === 401) {\n        console.warn(\"WRONG PW\")\n      } else {\n        response.text().then((response) => {\n          setAuthToken(response);\n          setLocation(\"/\");\n\n        });\n      }\n    })\n  }\n\n  return (\n    <div className=\"container d-flex justify-content-center align-items-center vh-100\">\n      <div className=\"col col-md-4 user-form py-4 d-flex flex-column\">\n        <div className=\"card\">\n          <img src={img} className=\"card-img-top\" />\n          <div className=\"card-body\">\n            <h3 className=\"text-center\">Log in to groendakmonitor</h3>\n            <form>\n              <div className=\"mt-5\">\n                <div className=\"form-group\">\n                  <label className=\"form-label text-start w-100\">\n                    Password\n                    <input type=\"password\" className=\"form-control mt-2\" onChange={(e) => {setPassword(e.currentTarget.value)}} value={password} />              \n                  </label>\n                </div>\n              </div>\n            </form>\n            <div className=\"form-group\">\n              <button className=\"w-100 btn btn-success\" onClick={handleLogin} >\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default Login;","import { PropsWithChildren } from \"react\";\n\ninterface Props {\n  title: string\n}\n\nconst Header = (props: PropsWithChildren<Props>) => {\n  const { title, children } = props;\n  return (\n    <div className=\"page-header page-header-light\">\n      <div className=\"page-header-content container header-elements-inline\">\n        <div className=\"page-title d-flex\">\n          <h2 className=\"font-weight-semibold ml-2\">{title}</h2>\n        </div>\n        <div className=\"header-elements\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Header;\n","import { PropsWithChildren } from \"react\";\n\nconst Page = (props: PropsWithChildren<{}>) => {\n  const { children } = props\n  return (\n    <div className=\"page-content\">\n      <div className=\"content-wrapper\">\n        {children}\n      </div> \n    </div> \n  )\n}\nexport default Page;\n","const Loading = () => {\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <strong>Loading...</strong>\n      <div className=\"spinner-border ms-auto text-info\" role=\"status\" aria-hidden=\"true\"></div>\n    </div>\n  )\n}\nexport default Loading;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { CustomerData } from \"models/customer\";\n\ninterface Props {\n  data: CustomerData;\n\n  onUpdateCustomer: (data: CustomerData) => void;\n  onDeleteCustomer: () => void;\n}\n\nconst CustomerDetails = (props: Props) => {\n  const { data, onUpdateCustomer, onDeleteCustomer } = props;\n  const [current, setCurrent] = useState(data);\n\n  useEffect(() => {\n    setCurrent(data)\n  }, [data]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrent({\n      ...current,\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n  const handleSaveClick = () => {\n    onUpdateCustomer(current);\n  }\n  const handleDeleteClick = () => {\n    onDeleteCustomer();\n  }\n\n  const ref = useRef<HTMLDivElement>(null)\n  const searchRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    let map: google.maps.Map;\n    const center: google.maps.LatLngLiteral = ! data.location ? {lat: 51.99954706308361, lng: 4.363697780523488} : toLatLong(data.location)\n\n    map = new google.maps.Map(ref.current!, {\n      center,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      mapTypeControl: false,\n      streetViewControl: false,\n      fullscreenControl: false,\n      zoom: 11\n    });\n\n    const marker = new google.maps.Marker({\n      map,\n      // icon,\n      title: \"LOCATION\",\n      position: map.getCenter(),\n    })\n\n    map.addListener(\"center_changed\", () => {\n      setCurrent(c => ({\n        ...c,\n        location: `${map.getCenter().lat()},${map.getCenter().lng()}`\n      }))\n   \n  \n      marker.setPosition(map.getCenter())\n    });\n      \n\n    // Create the search box and link it to the UI element.\n  const input = searchRef.current!;\n  const searchBox = new google.maps.places.SearchBox(input);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n  // Bias the SearchBox results towards current map's viewport.\n  map.addListener(\"bounds_changed\", () => {\n    searchBox.setBounds(map.getBounds() as google.maps.LatLngBounds);\n  });\n\n  // [START maps_places_searchbox_getplaces]\n  // Listen for the event fired when the user selects a prediction and retrieve\n  // more details for that place.\n  searchBox.addListener(\"places_changed\", () => {\n    const places = searchBox.getPlaces();\n\n    if (places.length === 0) {\n      return;\n    }\n\n  \n    // For each place, get the icon, name and location.\n    const bounds = new google.maps.LatLngBounds();\n    places.forEach((place) => {\n      if (!place.geometry) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    map.fitBounds(bounds);\n  });\n\n  }, [data.location]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <fieldset>\n           <legend className=\"text-uppercase font-size-sm font-weight-bold d-flex justify-content-between\">\n            <span className=\"d-block\">Customer details</span>\n            <span className=\"d-block badge badge-info\">ID: {data.id}</span>\n          </legend>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Name</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control\" value={current.name} onChange={handleChange} name=\"name\" placeholder=\"name\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Roof size</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"number\" min=\"0\" className=\"form-control\" value={current.roof_size} onChange={handleChange} name=\"roof_size\" placeholder=\"roof size\" />\n                <span className=\"input-group-append\">\n                  <span className=\"input-group-text\">m2</span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Roof thickness</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"number\" min=\"0\" className=\"form-control\" value={current.roof_thickness} onChange={handleChange} name=\"roof_thickness\" placeholder=\"roof thickness\" />\n                <span className=\"input-group-append\">\n                  <span className=\"input-group-text\">cm</span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-lg-3\">Location</label>\n            <div className=\"col-lg-9\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control\" ref={searchRef}/>\n                <div ref={ref} style={{ width: '100%', height: 200 }} />\n              </div>\n            </div>\n          </div>\n        </fieldset> \n      </div>\n      <div className=\"card-footer d-flex justify-content-between\">\n        <button type=\"submit\" className=\"btn btn-light\" onClick={handleDeleteClick}>Delete</button>\n        <div>\n          <button type=\"button\" className=\"ml-2 btn btn-primary\" onClick={handleSaveClick}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CustomerDetails;\n\nconst toLatLong = (input: string): google.maps.LatLngLiteral => {\n  const [lat, lng] = input.split(\",\").map(i => Number(i));\n  return { lat, lng }\n}","import { CustomerData, CustomerListData } from \"models/customer\";\n\ninterface Props {\n  data: CustomerListData;\n  selected?: boolean;\n\n  onClick: (customer: CustomerData) => void\n}\n\nconst CustomerRow = (props: Props) => {\n  const { data, selected, onClick } = props;\n  const date = data.last_water ? new Date(data.last_water).toLocaleString() : \"-\";\n\n  return (\n    <tr onClick={() => onClick(data)} className={selected ? \"selected\" : \"\"}>\n      <td>\n        <span className=\"d-block badge badge-info\">ID: {data.id}</span>\n      </td>\n      <td>{data.name}</td>\n      <td>{date}</td>\n    </tr>\n  )\n}\nexport default CustomerRow;\n\n","import { CustomerData, CustomerListData } from \"models/customer\";\nimport React from \"react\";\nimport CustomerRow from \"./CustomerRow\";\nimport './styles/customerList.scss';\n\ninterface Props {\n  data: CustomerListData[];\n  selectedCustomer?: CustomerData;\n\n  onCustomerSelect: (customer: CustomerData) => void\n}\n\nconst CustomerList = (props: Props) => {\n  const { data, selectedCustomer, onCustomerSelect } = props;\n  return (\n    <table className=\"table table-striped table-hover customer-list\">\n      <thead>\n        <tr>\n          <th scope=\"col\" style={{width: 32}}>#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Last data</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((c) => \n          <CustomerRow key={c.id} data={c} onClick={onCustomerSelect} selected={selectedCustomer === c}/>\n        )}\n      </tbody>  \n    </table>\n  )\n}\nexport default CustomerList;\n\n","import { Water } from \"models/water\";\n\ninterface Props {\n  data: Water;\n}\n\nconst WaterRow = (props: Props) => {\n  const { data } = props;\n  const date = new Date(data.date).toLocaleString();\n\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{data.incoming}</td>\n      <td>{data.outgoing}</td>\n    </tr>\n  )\n}\nexport default WaterRow;\n\n","import { Water } from \"models/water\";\nimport React, { useState } from \"react\";\nimport WaterRow from \"./WaterRow\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\n\ninterface Props {\n  data: Water[];\n  \n  onAddWater: (incoming: number, outgoing: number) => void;\n}\n\nconst CustomerList = (props: Props) => {\n  const { data, onAddWater } = props;\n  const [addingWater, setAddingWater] = useState({ incoming: 0, outgoing: 0})\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAddingWater(aW => ({\n      ...aW,\n      [event.target.name]: event.target.value\n    }))\n  }\n\n  const handleAddClick = () => {\n    onAddWater(addingWater.incoming, addingWater.outgoing);\n  }\n\n  const handleRandomIncoming = () => {\n    setAddingWater(aW => ({\n      ...aW,\n      incoming: (Math.random() * 5)\n    }))\n  }\n\n  const handleRandomOutgoing = () => {\n    setAddingWater(aW => ({\n      ...aW,\n      outgoing: (Math.random() * 4) + aW.incoming\n    }))\n\n  }\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{width: 46}}>Date</th>\n              <th scope=\"col\">Incoming</th>\n              <th scope=\"col\">Outgoing</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((c) => \n              <WaterRow key={c.id} data={c}/>\n            )}\n          </tbody>  \n        </table>\n      </div>\n      <div className=\"card-footer d-flex justify-content-between\">\n        <div className=\"d-flex\">\n          <div className=\"col-6\">\n            <label className=\"form-label\">Incoming</label>\n            <div className=\"input-group\">\n              <input type=\"number\" className=\"form-control\" name=\"incoming\" value={addingWater.incoming} onChange={handleChange} placeholder=\"Incoming\"/>\n              <span className=\"input-group-append\">\n                <button className=\"btn btn-primary\" onClick={handleRandomIncoming}>\n                  <FontAwesomeIcon icon={faRandom} />\n                </button>\n              </span>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <label className=\"form-label\">Outgoing</label>\n            <div className=\"input-group\">\n              <input type=\"number\" className=\"form-control\" name=\"outgoing\" value={addingWater.outgoing} onChange={handleChange} placeholder=\"Outgoing\"/>\n              <span className=\"input-group-append\">\n                <button className=\"btn btn-primary\" onClick={handleRandomOutgoing}>\n                  <FontAwesomeIcon icon={faRandom} />\n                </button>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-end\">\n          <button type=\"button\" className=\"ml-2 btn btn-primary\" onClick={handleAddClick}>\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default CustomerList;\n\n","import { getAuthHeader, getAuthToken } from \"authentication\";\nimport Header from \"components/misc/Header\";\nimport Page from \"components/misc/Page\";\nimport { Water } from \"models/water\";\nimport React, { useEffect, useState } from \"react\";\nimport useLocation from \"wouter/use-location\";\nimport { CustomerData, CustomerListData } from \"../../../models/customer\";\nimport Loading from \"../../misc/Loading\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport CustomerList from \"./CustomerList\";\nimport WaterList from \"./WaterList\";\n\nconst Overview = () => {\n  const [_location, setLocation] = useLocation();\n  const [data, setData] = useState<CustomerListData[]>()\n  const [selectedCustomer, setSelectedCustomer] = useState<CustomerData>()\n  const [loading, setLoading] = useState(false);\n  const [selectedCustomerWater, setSelectedCustomerWater] = useState<Water[]>()\n  \n  useEffect(() => {\n    const token = getAuthToken();\n    if (!token) {\n      setLocation(\"/login\");\n      return;\n    }\n    setLoading(true)\n    fetch(`${process.env.REACT_APP_API_URL}/customers`, {\n      method: 'get',\n      headers: [['Content-Type', 'application/json'], getAuthHeader()],\n    })\n    .then<CustomerListData[]>((response) => response.json())\n    .then((response) => {\n      setData(response);\n      setLoading(false)\n    })\n  }, [setLocation]);\n\n  const handleAddCustomer = () => {\n    const name = prompt(\"Enter customer name\");\n    if (name) {\n      setLoading(true)\n      fetch(`${process.env.REACT_APP_API_URL}/customer`, {\n        method: 'post',\n        headers: [['Content-Type', 'application/json'], getAuthHeader()],\n        body: JSON.stringify({\n          name\n        })\n      }).then<CustomerListData[]>((response) => response.json())\n      .then((response) => {\n        setData(response);\n        setLoading(false);\n      })\n    }\n  }\n\n  const handleUpdateCustomer = (customerData: CustomerData) => {\n    setLoading(true);\n    // Update customer on backend\n    fetch(`${process.env.REACT_APP_API_URL}/customer`, {\n      method: 'put',\n      headers: [['Content-Type', 'application/json'], getAuthHeader()],\n      body: JSON.stringify(customerData)\n    }).then<CustomerListData[]>((response) => response.json())\n    .then((response) => {\n      setData(response);\n      setLoading(false);\n    })\n  }\n\n  const handleDeleteCustomer = () => {\n    if (selectedCustomer){\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(`Are you sure you want to delete customer \"${selectedCustomer.name}\" (id: ${selectedCustomer.id}) with ${selectedCustomerWater?.length} water data points` )){\n        console.log('go!')\n      }\n    }\n  }\n\n  useEffect(() => {\n    // Fetch water for selected customer\n    if (selectedCustomer) {\n      fetch(`${process.env.REACT_APP_API_URL}/water/${selectedCustomer.id}`, {\n        method: 'get',\n        headers: [['Content-Type', 'application/json'], getAuthHeader()],\n      })\n      .then<Water[]>((response) => response.json())\n      .then((response) => {\n        setSelectedCustomerWater(response);\n      })\n    }\n  },[selectedCustomer]);\n\n  const handleAddingWater = (incoming: number, outgoing: number) => {\n    if (selectedCustomer) {\n      fetch(`${process.env.REACT_APP_API_URL}/water`, {\n        method: 'post',\n        headers: [['Content-Type', 'application/json'], getAuthHeader()],\n        body: JSON.stringify({\n          id: selectedCustomer.id,\n          in: incoming,\n          out: outgoing\n        })\n      }).then(() => {\n        // fetch water\n        if (selectedCustomer) {\n          fetch(`${process.env.REACT_APP_API_URL}/water/${selectedCustomer.id}`, {\n            method: 'get',\n            headers: [['Content-Type', 'application/json'], getAuthHeader()],\n          })\n          .then<Water[]>((response) => response.json())\n          .then((response) => {\n            setSelectedCustomerWater(response);\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <Page>\n      <Header title=\"Customers\">\n        <button type=\"button\" className=\"btn btn-success\" onClick={handleAddCustomer}>Add customer</button>\n      </Header>\n      <div className=\"container mt-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"card\">\n              <div className=\"card-header d-flex justify-content-between\">\n                <h3>Customers</h3>              \n              </div>\n              <div className=\"card-body p-0\">\n              { loading && <Loading />}\n              { data && <CustomerList data={data} onCustomerSelect={setSelectedCustomer} selectedCustomer={selectedCustomer} /> }\n              </div>\n            </div>\n          </div>\n          <div className=\"col\">\n            { selectedCustomer && <CustomerDetails data={selectedCustomer} onUpdateCustomer={handleUpdateCustomer} onDeleteCustomer={handleDeleteCustomer}/> }\n            { selectedCustomerWater && <WaterList data={selectedCustomerWater} onAddWater={handleAddingWater} />}\n          </div>\n        </div>\n      </div>\n    </Page>\n  )\n}\n\nexport default Overview;","import Login from 'components/pages/Login/Login';\nimport Overview from 'components/pages/Overview';\nimport React from 'react';\nimport { Route, Switch } from 'wouter';\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route>\n          <Overview />\n        </Route> \n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'assets/scss/bootstrap.scss';\nimport 'assets/scss/bootstrap_limitless.scss';\n\nimport 'assets/scss/colors.scss';\nimport 'assets/scss/components.scss';\nimport 'assets/scss/layout.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}